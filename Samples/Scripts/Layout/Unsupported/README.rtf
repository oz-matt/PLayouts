 Copyright Mentor Graphics Corporation 2003

    All Rights Reserved.

 THIS WORK CONTAINS TRADE SECRET
 AND PROPRIETARY INFORMATION WHICH IS THE
 PROPERTY OF MENTOR GRAPHICS
 CORPORATION OR ITS LICENSORS AND IS
 SUBJECT TO LICENSE TERMS. 

{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f28\froman\fcharset238\fprq2 Times New Roman CE;}{\f29\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f31\froman\fcharset161\fprq2 Times New Roman Greek;}{\f32\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f33\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f34\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f35\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f36\fswiss\fcharset238\fprq2 Arial CE;}{\f37\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f39\fswiss\fcharset161\fprq2 Arial Greek;}{\f40\fswiss\fcharset162\fprq2 Arial Tur;}{\f41\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f42\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f43\fswiss\fcharset186\fprq2 Arial Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 
Normal;}{\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{
\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \b \sbasedon10 
Strong;}{\*\cs16 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\*\cs17 \additive \i \sbasedon10 Emphasis;}{\s18\ql \li360\ri360\sb100\sa100\widctlpar\faauto\adjustright\rin360\lin360\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext18 Blockquote;}{\*\cs19 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}{\s20\ql \li0\ri0\sb100\sa100\sbauto1\saauto1\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext20 Normal (Web);}}{\*\listtable{\list\listtemplateid0{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\chbrdr
\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1 \fi-360\li2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 
\fi-360\li2880 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600 }{\listlevel\levelnfc0
\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5040 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5760 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext
\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid2}{\list\listtemplateid0{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\chbrdr
\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1 \fi-360\li2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 
\fi-360\li2880 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600 }{\listlevel\levelnfc0
\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5040 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5760 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext
\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid3}}{\*\listoverridetable{\listoverride\listid2\listoverridecount8{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}
{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}\ls1}{\listoverride\listid3\listoverridecount8{\lfolevel\listoverridestartat\levelstartat2}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls2}}{\info{\title XY Positions}{\author Jim Martens}{\operator Tom Woundy}
{\creatim\yr1999\mo3\dy24\hr15\min30}{\revtim\yr2000\mo1\dy20\hr18\min55}{\printim\yr1999\mo3\dy24\hr15\min28}{\version3}{\edmins5}{\nofpages5}{\nofwords1939}{\nofchars11055}{\*\company PADS Software Inc}{\nofcharsws0}{\vern8247}}\margl1440\margr1440 
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\nolnhtadjtbl \fet0
\sectd \linex0\headery1440\footery1440\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs15\fs24 This directory contains Visual Basic scripts that are }{\cs15\b\fs24 unsupported by PADS Software Inc}{\cs15\fs24 
.  Many of these have been written by PowerPCB users and submitted to the OLE Exchange program on the PADS web site (}{\field{\*\fldinst {\fs24  HYPERLINK http://www.pads.com/ }{\fs24 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001500000068007400740070003a002f002f007700770077002e0070006100640073002e0063006f006d002f000000e0c9ea79f9bace118c8200aa004ba90b2a00000068007400740070003a002f002f007700770077002e0070006100640073002e0063006f00
6d002f00000000}}}{\fldrslt {\cs16\ul\cf2 http://www.pads.com/}}}{\fs24 ).  The OLE Exchange Program allows user to submit new VB scripts that they have wri
tten, as well as download scripts from other users.  Scripts are always being added to this site, so visit it frequently to see what is new!
\par 
\par All of these scripts are compatible with PowerPCB Version 3.5.  Some are compatible with previous version of PowerPCB as noted.}{\cs15\fs24 
\par }{\cs15\fs28 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\cs17\b0\i ECO Registration Finder.BAS}{\b0\fs24 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i (PowerPCB v3.0 compatible)}{
\par }{This script is designed to help users search a loaded database and determine what part types are registe
red/non-registered for ECO operations. Users can pan to selected parts as well as change the registration status for each part type. This tool was created because PowerPCB has no GUI access, through FIND or QUERY/MODIFY to determine the ECO registration s
tatus on a PCB file.}{
\par }{\fs24 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\b0\i\fs20\lang1024\langfe1024\noproof 
{\shp{\*\shpinst\shpleft21\shptop26\shpright9381\shpbottom27\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz20\shplid1047{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8212\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx21\dpy26\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{\cs17\b0\i Plane Net Thermal Tool.BAS}{\b0\fs27 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i (PowerPCB v3.0 compatible)}{
\par }{This script was written in response to numerous requests from 
users and Technical Support for an easy way to turn on Thermal indicator flags for all eligible pins and vias on a design. The script, by default will attempt to turn on thermal flags for all pins/vias for all plane nets. The user can also choose to do th
is action to one plane net at a time. Flags will only be turned on for eligible pins/vias. Updated 5/28/99}{
\par }\pard\plain \s20\ql \li0\ri2160\sb100\sa100\sbauto1\saauto1\widctlpar\aspalpha\aspnum\faauto\adjustright\rin2160\lin0\itap0 \fs24\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20\lang1024\langfe1024\noproof 
{\shp{\*\shpinst\shpleft21\shptop239\shpright9381\shpbottom240\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz19\shplid1046{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8211\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx21\dpy239\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{\fs20 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\b0\i XY Positions.BAS}{\cs17\b0\i 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i (PowerPCB v2.1 compatible)}{
\par Generates an XY positions listing with headings for Ref Des, rotation, mounting side, etc.
\par This routine was generated in response to a request from our CAM people for a format that was the same as was previously used with Scicards. The routine can easily be edited to remove headings not required.
\par Diana Jackson\line SR Telecom\line }{\field{\*\fldinst {HYPERLINK "mailto:Diana_Jackson@SRTelecom.com"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b460000006d00610069006c0074006f003a004400690061006e0061005f004a00610063006b0073006f006e00400053005200540065006c00650063006f006d002e0063006f006d00000000}}}{\fldrslt {
\cs16\ul\cf2 Diana_Jackson@SRTelecom.com}}}{
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz0\shplid1026
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8192\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\b0\i Generate NOT_CONNECTED.BAS
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.0 compatible)}{
\par This script searches the active pcb design for pins that have no net associated with them. If the pin refdes is not H, MH, FID, or MTG, the comp.pin information is stored. After all pins have been queried, a file in the 
format generated by the ECO process is created and the stored component pins are written to this file. This ECO file is read back in and then deleted. This process places all unused pins (except those listed above) together on a net called NOT_CONNECTED (
keeping with Specctra convention). Test points can now be routed from any of the pins on this net as needed. This script does not disrupt existing test points or an existing NOT_CONNECTED net.
\par This script allows test points to be routed from unused pins without requiring Specctra or DFT.
\par Thomas Frayda\line Detection Systems, Inc.\line }{\field{\*\fldinst {HYPERLINK "mailto:tfrayda@detectionsys.com"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b400000006d00610069006c0074006f003a007400660072006100790064006100400064006500740065006300740069006f006e007300790073002e0063006f006d00000000}}}{\fldrslt {\cs16\ul\cf2 
tfrayda@detectionsys.com}}}{
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz1\shplid1027
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8193\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Net List Report.bas}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.0 compatible)}{
\par This program outputs the netlist for a PCB with spaces or periods as delimiter. Uses Quicksort Algorythym to speed up process. Takes about 30 seconds for 1400+ nets and ~7800 pins.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Part List Report.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.0 compatible)}{
\par This program outputs all parts in alphabetical order by RefDes and identifies which are SMD
 parts. Note, I check the drill size of the first pin, because the SMD flag is not always right! It also suppresses our global fiducials and mounting holes and other special items.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Test Point Report.bas}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.0 compatible)}{
\par This program reports details on all testpoints in a design. It also lists what nets are missing testpoints. It also flags which testpoints are not on .100 inch centers. It scans component pins and vias for testpoints.
\par These are the basic reports needed by board vendors. They are c
ompletely customizable and they sort the information. Some can be achieved in other areas of PADS, but these allow the most flexibility. We were able to customize our outputs to meet our vendors and engineers needs. We also have one spot in PADS where the
 designer can generate reports.
\par Kevin Adams\line Xerox Engineering Systems\line }{\field{\*\fldinst {HYPERLINK "mailto:kevin.r.adams@usa.xerox.com"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b460000006d00610069006c0074006f003a006b006500760069006e002e0072002e006100640061006d00730040007500730061002e007800650072006f0078002e0063006f006d00000000}}}{\fldrslt {
\cs16\ul\cf2 kevin.r.adams@usa.xerox.com}}}{
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz2\shplid1028
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8194\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Count smt pads per side.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 compatible)}{
\par This will check each pin on the PCB to see if it is a smd pin. Then it will check which layer it is on. It outputs: total smd on top, total smd on bottom, total smd, total thru-hole and total pins.
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 BOM for each side.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 compatible)}{
\par This will output a BOM file for all the parts mounted on the top side and another file for all the parts mounted on the bottom side. This is useful to build kits when assembling prototypes by hand.
\par Mark Bartlett\line Harmon Industries\line }{\field{\*\fldinst {HYPERLINK "mailto:markjb@microlink.net"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b380000006d00610069006c0074006f003a006d00610072006b006a00620040006d006900630072006f006c0069006e006b002e006e0065007400000000}}}{\fldrslt {\cs16\ul\cf2 markjb@microlink.net}}}{

\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz3\shplid1029
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8195\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Component Group Copy.bas}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 compatible)}{
\par This script helps to place equal groups of components.
\par }\pard\plain \s18\ql \li360\ri360\sb100\sa100\widctlpar\faauto\adjustright\rin360\lin360\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 
a. You must select some components. The script lists the selected reference types in a box. You can add a different increment parameter for every reference type. 
\par b. Define a x and y offset in the current units.
\par c. Add a repeat number.(nothing is one) 
\par d. Press apply.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {The script tries to copy the selected component group within the current rules.
\par }{\cs15\b For example}{, R1 (inc 10) is copied to R11, R21... U1 (inc 1 ) is copied to U2, U3... ect.
\par }{\cs15\b Restrictions : }{the script cannot handle Refs like U1X, U2X ect.
\par }{\cs15\b Comments :}{ The box, with lists the reference types is a text box, because is not possible to put TABS in a listbox and it is not possible to make a t
able(Tabelle). We need a grid inside the sax machine. A work around may be the possibility to change the font of the listbox. If it is possible to use a font like "Fixedsys", we can simulate a grid. The master way is the possibility to add new servers to 
the sax machine. Then we can implement a grid in Visual Basic and add it. 
\par Christian Friese\line }{\field{\*\fldinst {HYPERLINK "mailto:cfriese@berlin.snafu.de"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3e0000006d00610069006c0074006f003a00630066007200690065007300650040006200650072006c0069006e002e0073006e006100660075002e0064006500000000}}}{\fldrslt {\cs16\ul\cf2 
cfriese@berlin.snafu.de}}}{\f1 
\par }{\cs15\b This script uses entries in the registry. \line It is easier to see how they work, when you install "}{\field{\*\fldinst {\cs15\b HYPERLINK "apps/PadsScripts.reg"}{\b {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c000000000000046000015000000617070732f50616473536372697074732e72656700ffffadde00000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs16\b\ul\cf2 PadsScripts.reg}}}{\cs15\b "}{

\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz4\shplid1030
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8196\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 List Component Pins.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 compatible)}{
\par Very slow - it\'b4
s a basic interpreter. The script writes a listing of the pins of a component and the their nets. You have control over the format of the listing. You are able to produce a listing, which you can directly copy into the sources of a FGPA/ASIC Compiler. Ins
tall PadsScripts.reg for samples. 
\par Christian Friese\line }{\field{\*\fldinst {HYPERLINK "mailto:cfriese@berlin.snafu.de"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3e0000006d00610069006c0074006f003a00630066007200690065007300650040006200650072006c0069006e002e0073006e006100660075002e0064006500000000}}}{\fldrslt {\cs16\ul\cf2 
cfriese@berlin.snafu.de}}}{
\par }{\cs15\b This script uses entries in the registry. \line It is easier to see how they work, when you install "}{\field{\*\fldinst {\cs15\b HYPERLINK "apps/PadsScripts.reg"}{\b {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c000000000000046000015000000617070732f50616473536372697074732e72656700ffffadde00000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs16\b\ul\cf2 PadsScripts.reg}}}{\cs15\b "}{

\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz5\shplid1031
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8197\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Explore Project Directory.bas}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 compatible)}{
\par Gets the project directory and opens the explorer with this dir.
\par Christian Friese\line }{\field{\*\fldinst {HYPERLINK "mailto:cfriese@berlin.snafu.de"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3e0000006d00610069006c0074006f003a00630066007200690065007300650040006200650072006c0069006e002e0073006e006100660075002e0064006500000000}}}{\fldrslt {\cs16\ul\cf2 
cfriese@berlin.snafu.de}}}{
\par }{\cs15\b This script uses entries in the registry. \line It is easier to see how they work, when you install "}{\field{\*\fldinst {\cs15\b HYPERLINK "apps/PadsScripts.reg"}{\b {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c000000000000046000015000000617070732f50616473536372697074732e72656700ffffadde00000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs16\b\ul\cf2 PadsScripts.reg}}}{\cs15\b "}{

\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz6\shplid1032
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8198\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 PowerLogic OLE-Check Interpreter.bas}{\b0\fs20 
\par }{\fs20 PowerLogic OLE-Check Netname Repair.bas}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 and PowerLogic compatible)}{\b\ul 
\par }{These two scripts help you to solve the problems with netnames, you may run into, if you introduce a change in PowerLogic. For example, if you add a pull-up to a $$$-net PowerLogic will change the netname. Both scripts read the report, which is made, wh
en you press the \'84
Compare PCB" - button in the OLE Dialog of PowerLogic. So, every time, when you change anything and you want to use this script again, you have to make a new report. It is not possible, to automate this, because there are several bugs in 
the Windows GUI of PowerLogic. 
\par {\listtext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\faauto\ls1\outlinelevel0\adjustright\rin0\lin720\itap0 {With the interpreter you can highlight the listed problems in both programs. 

\par {\listtext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\faauto\ls2\outlinelevel0\adjustright\rin0\lin720\itap0 {The other script renames the nets in PowerPCB.\line 
- Equal nets with different names.\line - Nets with different pincount, but no shortcut (add a pull-up). 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {
(Start PowerLogic and PowerPCB with a project with makes a report without errors. Then change some netnames on both sides, press the Compare PCB -button in the OLE Dialog of PowerLogic and start the scripts)
\par Christian Friese\line }{\field{\*\fldinst {HYPERLINK "mailto:cfriese@berlin.snafu.de"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3e0000006d00610069006c0074006f003a00630066007200690065007300650040006200650072006c0069006e002e0073006e006100660075002e0064006500000000}}}{\fldrslt {\cs16\ul\cf2 
cfriese@berlin.snafu.de}}}{
\par }{\cs15\b This script uses entries in the registry. \line It is easier to see how they work, when you install "}{\field{\*\fldinst {\cs15\b HYPERLINK "apps/PadsScripts.reg"}{\b {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c000000000000046000015000000617070732f50616473536372697074732e72656700ffffadde00000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs16\b\ul\cf2 PadsScripts.reg}}}{\cs15\b "}{

\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz7\shplid1033
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8199\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Wildcard Selector.bas}{\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 compatible)}{
\par This Visua
l Basic script allows you to use full wildcarding to select/unselect parts, components pins, nets, and vias. Zero or more wildcard characters (*) may appear anywhere in the search string. You may add or remove names from the select list by combining multi
ple selections and unselections. The names of the selected objects will appear alphabetically in a listbox as part of the dialog box.
\par It makes it much easier to select and unselect objects based on a more complex set of naming rules. Also, once the objects are selected you can immediately view all of their names in a small listbox.
\par Some useful examples might be:
\par }\pard\plain \s18\ql \li360\ri360\sb100\sa100\widctlpar\faauto\adjustright\rin360\lin360\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 In part mode, select all 12 class capacitors: 12*:c* [press Select]\line 
In comp mode, select all diodes and resistors: d* [press Select] r* [press Select]\line In pin mode, select pin one on all caps: c*.1 [press Select]\line In net mode, select all non-negative asserted clock nets: *clk* [press Select] -* [press Unsel]\line 
In via mode, select all vias * [press Select]
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {Contributed by: Martin Venner\line Company: Compaq Computer Corp.\line EMail: }{\field{\*\fldinst {
HYPERLINK "mailto:Martin.Venner@digital.com"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b420000006d00610069006c0074006f003a004d0061007200740069006e002e00560065006e006e006500720040006400690067006900740061006c002e0063006f006d00000000}}}{\fldrslt {\cs16\ul\cf2 
Martin.Venner@digital.com}}}{
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz8\shplid1034
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8200\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Select Component Pins by Prefix.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 compatible)}{
\par This Visual Basic Script came about from a customer requiring to select Test Point Component Pins i
n order to Query/Modify them and set them to be recognized as Test Points under PowerPCB. This then meant that the test points report could be utilized to give X-Y coordinates for ATE.
\par Contributed by: Paul Woolford\line Company: Panacea Software part of Hydra Holdings PLC\line Email: }{\field{\*\fldinst {HYPERLINK "mailto:paulw_hydra@kbnet.co.uk"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3e0000006d00610069006c0074006f003a007000610075006c0077005f006800790064007200610040006b0062006e00650074002e0063006f002e0075006b00000000}}}{\fldrslt {\cs16\ul\cf2 
paulw_hydra@kbnet.co.uk}}}{
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz9\shplid1035
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8201\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}{\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz10\shplid1036
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8202\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Select Plated Non-Plated and Via Holes By Drill Size.BAS}{\cs17\b0\i0\fs20 

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 compatible)}{
\par Generates separate lists of all the different plated, non-plated, and via hole sizes used in a design. Simply clicking on a hole size within any of these lists will select them. Eliminates the painstaking task of finding that illusive hole size. Simplifie
s the aperture reduction procedure for those cost sensitive boards.
\par Contributed by: Paul Woolford\line Company: Panacea Software part of Hydra Holdings PLC\line E-mail: }{\field{\*\fldinst {HYPERLINK "mailto:paulw_hydra@kbnet.co.uk"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3e0000006d00610069006c0074006f003a007000610075006c0077005f006800790064007200610040006b0062006e00650074002e0063006f002e0075006b00000000}}}{\fldrslt {\cs16\ul\cf2 
paulw_hydra@kbnet.co.uk}}}{
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz11\shplid1037
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8203\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 no_testpts.BAS (}{\fs20\cf6 New!}{\fs20 )}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i (PowerPCB v2.1 compatible)}{
\par This program searches the current Database for all nets and loads them into a table called ListNets$. It then searches the current Database for a via and the net name attached to the via. It compares the via net name with the each net
 name that exists in the ListNets$ array. If a match is found it will move all subsequent array entries in ListNets$ "up" one array location. This effectively overwrites the net name that has a via attached to it and reduces the ListNets$ array size. Once
 this process is complete, the ListNets$ Array only contains net names without vias. This list is displayed allowing the user To Select the nets that are missing vias.
\par Contributed by: Mike DeVita}{\cs15\b \line }{Company: EF Data\line E-mail: }{\field{\*\fldinst {HYPERLINK "mailto:devita@efdata.com"}{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b320000006d00610069006c0074006f003a0064006500760069007400610040006500660064006100740061002e0063006f006d00000000}}}{\fldrslt {\cs16\ul\cf2 devita@efdata.com}}}{
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz12\shplid1038
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8204\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Generate ASCII Routes.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB 2.1 compatible)}{
\par A Visual Basic script that executes a macro used to export the Routes from a design to an ASCII file. 
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz13\shplid1039
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8205\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Change Units 1.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 & PADS-PowerBGA v2.5 compatible)}{
\par This applet enables you to change design units via a "toolbar" controlled by the user. It is "transportable" to the Decal editor as well. Enable users to change units quickly and easily without having to jump to the preferences menu. Makes it easier to ma
ke mil parts with metric pin spacings or metric parts with mil pin spacing.
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz14\shplid1040
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8206\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Change Units 2.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB v2.1 & PADS-PowerBGA v2.5 compatible)}{
\par This applet enables you to change design units using radio buttons similar to what users see in the Preferences
 menu. It is "transportable" to the Decal editor as well. Enable users to change units quickly and easily without having to jump to the Preferences Menu. Makes it easier to make mil parts with metric pin spacing or metric parts with mil pin spacing.

\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz15\shplid1041
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8207\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}{\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz16\shplid1042
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8208\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Attributes to Excel.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB V3.0 and PowerLogic V3.0  compatible)}{
\par This applet scans the user\rquote s design for all attributes, then allows the user to select from a dialog box which attributes to output to Microsoft Excel.  
\par }{\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop240\shpright9360\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz18\shplid1043
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}
{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8210\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy240\dpxsize9360\dpysize1
\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs20 Used and Unused Ref-Des.BAS}{\cs17\b0\i0\fs20 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\b\i  (PowerPCB V3.0  and PowerLogic V3.0 compatible)}{
\par This applet scans the user\rquote s design for used and unused reference designators.  The script sorts by reference designator prefix and outputs to Microsoft Wordpad.}{\cs15\b 
\par }\pard \qc \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\lang1024\langfe1024\noproof 
{\shp{\*\shpinst\shpleft0\shptop106\shpright9360\shpbottom107\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz17\shplid1044{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn lineColor}{\sv 13948116}}{\sp{\sn lineWidth}{\sv 22225}}{\sp{\sn shadowOffsetX}{\sv 0}}{\sp{\sn shadowOffsetY}{\sv -12700}}{\sp{\sn shadowOriginY}{\sv 32385}}{\sp{\sn fShadow}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 0}}
{\sp{\sn fLayoutInCell}{\sv 0}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8209\dpline\dpptx0\dppty0\dpptx9360\dppty1\dpx0\dpy106\dpxsize9360\dpysize1\dplinew35\dplinecor212\dplinecog212\dplinecob212}}}}{
\par }}